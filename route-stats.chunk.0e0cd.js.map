{"version":3,"sources":["webpack:///route-stats.chunk.0e0cd.js","webpack:///./utils/pluralise.js","webpack:///./utils/stat.js","webpack:///./routes/stats/index.js"],"names":["webpackJsonp","JiZg","module","__webpack_exports__","__webpack_require__","pluralise","string","count","alt","OHvr","_objectDestructuringEmpty","obj","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","preact_min","preact","match","date","stopWords","utils_questions","today","url","_ref5","href","_ref6","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","class","_ref19","Stats","_temp","_this","_ret","_len","arguments","length","args","Array","_key","this","_Component","apply","concat","state","totalEntries","uniqueDates","wordCount","totalHighlights","totalTrackingEntries","popularWords","showPopularWords","showStopWords","trackingQuestions","statOffset","getData","keysData","keys","unique","highlights","props","db","map","key","Number","split","shift","sort","a","b","reduce","removeDuplicates","getAll","getPopularWords","getTrackingStats","setState","e","questions","answers","now","nowNumber","dateFrom","getTrackingQuestions","Date","getFullYear","double","getMonth","getDate","forEach","question","filter","x","questionId","id","default","answer","dateString","settings","calculation","instances","stat","Math","round","c","isAnswerValid","isNaN","undefined","theWords","entries","noteEntries","highestValues","then","results","notes","entry","words","toLowerCase","Boolean","includes","w","from","Set","values","slice","v","k","join","componentDidMount","componentWillReceiveProps","indexOf","render","thisWeek","getOffsetToMonday","thisMonth","thisYear","getOffsetToYear","stats","type","onClick","onChange","event","target","title","empty","isEmpty","min","Component","connect"],"mappings":"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","file":"route-stats.chunk.0e0cd.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ \"JiZg\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return pluralise; });\nvar pluralise = function pluralise(string) {\n  var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var alt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  return count !== 1 ? alt || string + 's' : string;\n};\n\n/***/ }),\n\n/***/ \"OHvr\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ../node_modules/preact/dist/preact.min.js\nvar preact_min = __webpack_require__(\"KM04\");\nvar preact_min_default = /*#__PURE__*/__webpack_require__.n(preact_min);\n\n// EXTERNAL MODULE: ../node_modules/unistore/preact.js\nvar preact = __webpack_require__(\"o6ac\");\nvar preact_default = /*#__PURE__*/__webpack_require__.n(preact);\n\n// EXTERNAL MODULE: ../node_modules/preact-router/match.js\nvar match = __webpack_require__(\"sw5u\");\nvar match_default = /*#__PURE__*/__webpack_require__.n(match);\n\n// EXTERNAL MODULE: ./utils/pluralise.js\nvar pluralise = __webpack_require__(\"JiZg\");\n\n// EXTERNAL MODULE: ./utils/date.js\nvar date = __webpack_require__(\"8EZx\");\n\n// CONCATENATED MODULE: ./utils/stat.js\nvar stopWords = ['i', 'a', 'and', 'the', 'in', 'of', 'to', 'then', 'they', 'was', 'for', 'with', 'it', 'we', 'on', 'an', 'but', 'at', 'had', 'so', 'went', 'up', 'some', 'got', 'my', 'be', 'that', 'this', \"i'm\", 'made', 'out', \"it's\", 'is', 'did', 'me', 'too', 'how', 'off', 'as'];\n// EXTERNAL MODULE: ./utils/questions.js\nvar utils_questions = __webpack_require__(\"b1q8\");\n\n// CONCATENATED MODULE: ../node_modules/babel-loader/lib??ref--0!./routes/stats/index.js\n\n\nfunction _objectDestructuringEmpty(obj) { if (obj == null) throw new TypeError(\"Cannot destructure undefined\"); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\n\n\nvar today = Object(date[\"l\" /* url */])();\n\nvar _ref5 = Object(preact_min[\"h\"])(\n  match[\"Link\"],\n  { href: '/highlights/' },\n  'here'\n);\n\nvar _ref6 = Object(preact_min[\"h\"])(\n  'p',\n  null,\n  'Your most popular words are:'\n);\n\nvar _ref8 = Object(preact_min[\"h\"])('br', null);\n\nvar _ref9 = Object(preact_min[\"h\"])('hr', null);\n\nvar _ref10 = Object(preact_min[\"h\"])(\n  'h2',\n  null,\n  'Personal Statistics'\n);\n\nvar _ref11 = Object(preact_min[\"h\"])(\n  'option',\n  { value: '0' },\n  'All time'\n);\n\nvar _ref12 = Object(preact_min[\"h\"])(\n  'option',\n  { value: '7' },\n  '7 days'\n);\n\nvar _ref13 = Object(preact_min[\"h\"])(\n  'option',\n  { value: '14' },\n  '14 days'\n);\n\nvar _ref14 = Object(preact_min[\"h\"])(\n  'option',\n  { value: '30' },\n  '30 days'\n);\n\nvar _ref15 = Object(preact_min[\"h\"])(\n  'option',\n  { value: '365' },\n  '365 days'\n);\n\nvar _ref16 = Object(preact_min[\"h\"])('div', null);\n\nvar _ref17 = Object(preact_min[\"h\"])(\n  'p',\n  null,\n  'There\\'s not quite enough data to gather stats. ',\n  ' ',\n  Object(preact_min[\"h\"])('br', null),\n  Object(preact_min[\"h\"])('br', null),\n  Object(preact_min[\"h\"])(\n    match[\"Link\"],\n    { href: today },\n    'start writing'\n  ),\n  '!'\n);\n\nvar _ref18 = Object(preact_min[\"h\"])(\n  'h1',\n  { 'class': 'mb20' },\n  'Statistics & Reports'\n);\n\nvar _ref19 = Object(preact_min[\"h\"])('hr', null);\n\nvar stats_Stats = function (_Component) {\n  _inherits(Stats, _Component);\n\n  function Stats() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Stats);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {\n      totalEntries: 0,\n      uniqueDates: 0,\n      wordCount: 0,\n      totalHighlights: 0,\n      totalTrackingEntries: 0,\n      popularWords: [],\n      showPopularWords: false,\n      showStopWords: false,\n      trackingQuestions: [],\n      statOffset: 0\n    }, _this.getData = function () {\n      return new Promise(function ($return, $error) {\n        var keysData, totalEntries, keys, unique, highlights, totalHighlights, _ref, wordCount, popularWords, _ref2, trackingQuestions, totalTrackingEntries;\n\n        var $Try_1_Post = function () {\n          try {\n            return $return();\n          } catch ($boundEx) {\n            return $error($boundEx);\n          }\n        };var $Try_1_Catch = function (e) {\n          // console.error(e);\n\n          try {\n            return $Try_1_Post();\n          } catch ($boundEx) {\n            return $error($boundEx);\n          }\n        };\n        try {\n          return Promise.resolve(_this.props.db.keys('entries')).then(function ($await_2) {\n            try {\n              keysData = $await_2;\n              totalEntries = keysData.length;\n\n              keys = keysData.map(function (key) {\n                return Number(key.split('_').shift());\n              });\n              keys.sort(function (a, b) {\n                return a - b;\n              });\n\n              unique = keys.reduce(_this.removeDuplicates, []);\n\n              return Promise.resolve(_this.props.db.getAll('highlights')).then(function ($await_3) {\n                try {\n                  highlights = $await_3;\n                  totalHighlights = highlights.length;\n\n                  return Promise.resolve(_this.getPopularWords()).then(function ($await_4) {\n                    try {\n                      _ref = $await_4, wordCount = _ref[0], popularWords = _ref[1];\n                      return Promise.resolve(_this.getTrackingStats()).then(function ($await_5) {\n                        try {\n                          _ref2 = $await_5, trackingQuestions = _ref2[0], totalTrackingEntries = _ref2[1];\n\n\n                          _this.setState({\n                            totalEntries: totalEntries,\n                            uniqueDates: unique.length,\n                            wordCount: wordCount,\n                            totalHighlights: totalHighlights,\n                            popularWords: popularWords,\n                            trackingQuestions: trackingQuestions,\n                            totalTrackingEntries: totalTrackingEntries\n                          });\n                          return $Try_1_Post();\n                        } catch ($boundEx) {\n                          return $Try_1_Catch($boundEx);\n                        }\n                      }, $Try_1_Catch);\n                    } catch ($boundEx) {\n                      return $Try_1_Catch($boundEx);\n                    }\n                  }, $Try_1_Catch);\n                } catch ($boundEx) {\n                  return $Try_1_Catch($boundEx);\n                }\n              }, $Try_1_Catch);\n            } catch ($boundEx) {\n              return $Try_1_Catch($boundEx);\n            }\n          }, $Try_1_Catch);\n        } catch (e) {\n          $Try_1_Catch(e)\n        }\n      });\n    }, _this.getTrackingStats = function () {\n      return new Promise(function ($return, $error) {\n        var questions, answers, now, statOffset, nowNumber, dateFrom;\n        return Promise.resolve(Object(utils_questions[\"b\" /* getTrackingQuestions */])(_this.props.db)).then(function ($await_6) {\n          try {\n            questions = $await_6;\n            return Promise.resolve(_this.props.db.getAll('trackingEntries')).then(function ($await_7) {\n              try {\n                answers = $await_7;\n\n                now = new Date();\n                statOffset = _this.state.statOffset;\n\n                nowNumber = '' + now.getFullYear() + Object(date[\"a\" /* double */])(now.getMonth() + 1) + Object(date[\"a\" /* double */])(now.getDate());\n                dateFrom = statOffset ? nowNumber - statOffset : 0;\n\n                questions.forEach(function (question) {\n                  question.answers = answers.filter(function (x) {\n                    return x.questionId === question.id;\n                  }).filter(function (x) {\n                    return x.value !== question.default;\n                  }).filter(function (answer) {\n                    if (!dateFrom) {\n                      return true;\n                    }\n\n                    return Number(answer.dateString) >= dateFrom;\n                  });\n\n                  switch (question.settings.calculation) {\n                    case 'average':\n                      question.instances = question.answers;\n                      question.stat = Math.round(question.answers.reduce(function (c, x) {\n                        return c + x.value;\n                      }, 0) / question.answers.length * 1000) / 1000;\n                      break;\n                    case 'total':\n                      question.stat = Math.round(question.answers.reduce(function (c, x) {\n                        return c + x.value;\n                      }, 0) * 1000) / 1000;\n                      break;\n                    case 'count':\n                      question.instances = question.answers.filter(utils_questions[\"c\" /* isAnswerValid */]);\n                      question.stat = question.instances.length;\n                      break;\n                  }\n\n                  if (isNaN(question.stat)) {\n                    question.stat = undefined;\n                  }\n                });\n\n                return $return([questions.filter(function (x) {\n                  return x.stat !== undefined;\n                }), answers.length]);\n              } catch ($boundEx) {\n                return $error($boundEx);\n              }\n            }, $error);\n          } catch ($boundEx) {\n            return $error($boundEx);\n          }\n        }, $error);\n      });\n    }, _this.getPopularWords = function () {\n      return new Promise(function ($return, $error) {\n        var theWords, entries, noteEntries, wordCount, highestValues, popularWords;\n\n        theWords = {};\n        return Promise.resolve(_this.props.db.getAll('entries')).then(function ($await_8) {\n          try {\n            entries = $await_8;\n            return Promise.resolve(_this.props.db.getAll('trackingEntries').then(function (results) {\n              return results.map(function (x) {\n                return x.notes || '';\n              });\n            })).then(function ($await_9) {\n              try {\n                noteEntries = $await_9;\n\n                wordCount = [].concat(entries, noteEntries).reduce(function (c, entry) {\n                  var words = entry.split(/[.\\s,]+/).map(function (x) {\n                    return x.toLowerCase();\n                  }).filter(Boolean);\n\n                  words.filter(function (x) {\n                    return _this.state.showStopWords || !stopWords.includes(x);\n                  }).forEach(function (w) {\n                    return theWords[w] = theWords[w] ? theWords[w] + 1 : 1;\n                  });\n\n                  return c + words.length;\n                }, 0);\n\n                highestValues = Array.from(new Set(Object.values(theWords).sort(function (a, b) {\n                  return b - a;\n                })));\n                popularWords = highestValues.slice(0, 50).map(function (v) {\n                  return [v, Object.keys(theWords).filter(function (k) {\n                    return theWords[k] === v;\n                  }).join(', ')];\n                });\n\n                return $return([wordCount, popularWords]);\n              } catch ($boundEx) {\n                return $error($boundEx);\n              }\n            }, $error);\n          } catch ($boundEx) {\n            return $error($boundEx);\n          }\n        }, $error);\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Stats.prototype.componentDidMount = function componentDidMount() {\n    this.getData();\n  };\n\n  Stats.prototype.componentWillReceiveProps = function componentWillReceiveProps() {\n    this.getData();\n  };\n\n  Stats.prototype.removeDuplicates = function removeDuplicates(c, date) {\n    return c.indexOf(date) === -1 ? [].concat(c, [date]) : c;\n  };\n\n  Stats.prototype.render = function render(_ref3, _ref4) {\n    var _this2 = this;\n\n    var totalEntries = _ref4.totalEntries,\n        uniqueDates = _ref4.uniqueDates,\n        wordCount = _ref4.wordCount,\n        totalHighlights = _ref4.totalHighlights,\n        totalTrackingEntries = _ref4.totalTrackingEntries,\n        popularWords = _ref4.popularWords,\n        showPopularWords = _ref4.showPopularWords,\n        showStopWords = _ref4.showStopWords,\n        trackingQuestions = _ref4.trackingQuestions,\n        statOffset = _ref4.statOffset;\n\n    _objectDestructuringEmpty(_ref3);\n\n    var thisWeek = Object(date[\"d\" /* getOffsetToMonday */])();\n    var thisMonth = new Date().getDate() - 1;\n    var thisYear = Object(date[\"e\" /* getOffsetToYear */])();\n\n    var stats = Object(preact_min[\"h\"])(\n      'div',\n      null,\n      wordCount ? Object(preact_min[\"h\"])(\n        'p',\n        null,\n        'You\\'ve written ',\n        Object(preact_min[\"h\"])(\n          'strong',\n          null,\n          wordCount\n        ),\n        ' ',\n        Object(pluralise[\"a\" /* pluralise */])('word', wordCount),\n        ' in',\n        ' ',\n        Object(preact_min[\"h\"])(\n          'strong',\n          null,\n          totalEntries,\n          ' ',\n          Object(pluralise[\"a\" /* pluralise */])('entry', totalEntries, 'entries')\n        ),\n        ' ',\n        'over',\n        ' ',\n        Object(preact_min[\"h\"])(\n          'strong',\n          null,\n          uniqueDates,\n          ' ',\n          Object(pluralise[\"a\" /* pluralise */])('day', uniqueDates)\n        ),\n        '!'\n      ) : null,\n      totalHighlights ? Object(preact_min[\"h\"])(\n        'p',\n        null,\n        'You\\'ve also highlighted ',\n        Object(preact_min[\"h\"])(\n          'strong',\n          null,\n          totalHighlights\n        ),\n        ' ',\n        Object(pluralise[\"a\" /* pluralise */])('day', totalHighlights),\n        '. Check',\n        ' ',\n        Object(pluralise[\"a\" /* pluralise */])('it', totalHighlights, 'them'),\n        ' out',\n        ' ',\n        _ref5,\n        '.'\n      ) : null,\n      showPopularWords && popularWords.length ? Object(preact_min[\"h\"])(\n        'div',\n        null,\n        _ref6,\n        Object(preact_min[\"h\"])(\n          'table',\n          { 'class': 'left' },\n          Object(preact_min[\"h\"])(\n            'tbody',\n            null,\n            popularWords.map(function (_ref7) {\n              var v = _ref7[0],\n                  k = _ref7[1];\n              return Object(preact_min[\"h\"])(\n                'tr',\n                { key: k },\n                Object(preact_min[\"h\"])(\n                  'th',\n                  null,\n                  v\n                ),\n                Object(preact_min[\"h\"])(\n                  'td',\n                  { 'class': 'capitalize' },\n                  k\n                )\n              );\n            })\n          )\n        ),\n        _ref8,\n        !showStopWords ? Object(preact_min[\"h\"])(\n          'button',\n          {\n            type: 'button',\n            'class': 'button button--grey',\n            onClick: function onClick() {\n              _this2.setState({ showStopWords: true });\n              _this2.getData();\n            }\n          },\n          'Include stop words'\n        ) : null\n      ) : wordCount ? Object(preact_min[\"h\"])(\n        'button',\n        {\n          type: 'button',\n          'class': 'button button--grey',\n          onClick: function onClick() {\n            return _this2.setState({ showPopularWords: true });\n          }\n        },\n        'Show popular words'\n      ) : null,\n      totalTrackingEntries ? Object(preact_min[\"h\"])(\n        'div',\n        { 'class': 'mb40' },\n        _ref9,\n        Object(preact_min[\"h\"])(\n          'header',\n          { 'class': 'c-statistic-controls u-flex mb20' },\n          _ref10,\n          Object(preact_min[\"h\"])(\n            'select',\n            {\n              'class': 'c-select--small',\n              value: statOffset,\n              onChange: function onChange(event) {\n                _this2.setState({ statOffset: Number(event.target.value) });\n                _this2.getData();\n              }\n            },\n            _ref11,\n            _ref12,\n            _ref13,\n            _ref14,\n            _ref15,\n            Object(preact_min[\"h\"])(\n              'option',\n              { value: thisWeek },\n              'This week'\n            ),\n            Object(preact_min[\"h\"])(\n              'option',\n              { value: thisMonth },\n              'This month'\n            ),\n            Object(preact_min[\"h\"])(\n              'option',\n              { value: thisYear },\n              'This year'\n            )\n          )\n        ),\n        Object(preact_min[\"h\"])(\n          'p',\n          null,\n          'You\\'ve tracked ',\n          totalTrackingEntries,\n          ' personal',\n          ' ',\n          Object(pluralise[\"a\" /* pluralise */])('statistic', totalTrackingEntries),\n          ' on MindPalace.'\n        ),\n        trackingQuestions.map(function (question) {\n          return Object(preact_min[\"h\"])(\n            'div',\n            { 'class': 'tracking-summary' },\n            Object(preact_min[\"h\"])(\n              'strong',\n              null,\n              question.title\n            ),\n            Object(preact_min[\"h\"])(\n              'span',\n              { 'class': 'tracking-summary__stat' },\n              Object(preact_min[\"h\"])(\n                'output',\n                null,\n                question.stat\n              ),\n              Object(preact_min[\"h\"])(\n                'small',\n                null,\n                ' (',\n                question.settings.calculation,\n                ')'\n              )\n            ),\n            question.instances && question.instances.length ? Object(preact_min[\"h\"])(\n              match[\"Link\"],\n              { href: '/entries/' + question.id },\n              'See all entries'\n            ) : null\n          );\n        })\n      ) : _ref16\n    );\n\n    var empty = _ref17;\n\n    var isEmpty = Math.min(totalEntries, uniqueDates, wordCount) === 0 && !totalTrackingEntries;\n\n    return Object(preact_min[\"h\"])(\n      'div',\n      { 'class': 'wrap wrap--thin lift-children' },\n      _ref18,\n      _ref19,\n      Object(preact_min[\"h\"])(\n        'div',\n        null,\n        isEmpty ? empty : stats\n      )\n    );\n  };\n\n  return Stats;\n}(preact_min[\"Component\"]);\n\n/* harmony default export */ var lib__ref__0_routes_stats = __webpack_exports__[\"default\"] = (Object(preact[\"connect\"])('db')(stats_Stats));\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// route-stats.chunk.0e0cd.js","export const pluralise = (string, count = 0, alt = '') => {\n  return count !== 1 ? alt || string + 's' : string;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./utils/pluralise.js","export const stopWords = [\n  'i',\n  'a',\n  'and',\n  'the',\n  'in',\n  'of',\n  'to',\n  'then',\n  'they',\n  'was',\n  'for',\n  'with',\n  'it',\n  'we',\n  'on',\n  'an',\n  'but',\n  'at',\n  'had',\n  'so',\n  'went',\n  'up',\n  'some',\n  'got',\n  'my',\n  'be',\n  'that',\n  'this',\n  \"i'm\",\n  'made',\n  'out',\n  \"it's\",\n  'is',\n  'did',\n  'me',\n  'too',\n  'how',\n  'off',\n  'as',\n];\n\n\n\n// WEBPACK FOOTER //\n// ./utils/stat.js","import { h, Component } from 'preact';\nimport { connect } from 'unistore/preact';\nimport { Link } from 'preact-router/match';\nimport { pluralise } from '../../utils/pluralise';\nimport {\n  url,\n  double,\n  getOffsetToMonday,\n  getOffsetToYear,\n} from '../../utils/date';\nimport { stopWords } from '../../utils/stat';\nimport { getTrackingQuestions, isAnswerValid } from '../../utils/questions';\n\nconst today = url();\n\nclass Stats extends Component {\n  state = {\n    totalEntries: 0,\n    uniqueDates: 0,\n    wordCount: 0,\n    totalHighlights: 0,\n    totalTrackingEntries: 0,\n    popularWords: [],\n    showPopularWords: false,\n    showStopWords: false,\n    trackingQuestions: [],\n    statOffset: 0,\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  componentWillReceiveProps() {\n    this.getData();\n  }\n\n  getData = async () => {\n    try {\n      const keysData = await this.props.db.keys('entries');\n      const totalEntries = keysData.length;\n\n      // Prepare the keys\n      const keys = keysData.map(key => Number(key.split('_').shift()));\n      keys.sort((a, b) => a - b);\n\n      const unique = keys.reduce(this.removeDuplicates, []);\n\n      // Highlights\n      const highlights = await this.props.db.getAll('highlights');\n      const totalHighlights = highlights.length;\n\n      const [wordCount, popularWords] = await this.getPopularWords();\n\n      const [\n        trackingQuestions,\n        totalTrackingEntries,\n      ] = await this.getTrackingStats();\n\n      this.setState({\n        totalEntries,\n        uniqueDates: unique.length,\n        wordCount,\n        totalHighlights,\n        popularWords,\n        trackingQuestions,\n        totalTrackingEntries,\n      });\n    } catch (e) {\n      // console.error(e);\n    }\n  };\n\n  getTrackingStats = async () => {\n    const questions = await getTrackingQuestions(this.props.db);\n    const answers = await this.props.db.getAll('trackingEntries');\n\n    const now = new Date();\n    const { statOffset } = this.state;\n    const nowNumber = `${now.getFullYear()}${double(\n      now.getMonth() + 1\n    )}${double(now.getDate())}`;\n    const dateFrom = statOffset ? nowNumber - statOffset : 0;\n\n    questions.forEach(question => {\n      question.answers = answers\n        .filter(x => x.questionId === question.id)\n        .filter(x => x.value !== question.default)\n        .filter(answer => {\n          if (!dateFrom) {\n            return true;\n          }\n\n          return Number(answer.dateString) >= dateFrom;\n        });\n\n      switch (question.settings.calculation) {\n        case 'average':\n          question.instances = question.answers;\n          question.stat =\n            Math.round(\n              (question.answers.reduce((c, x) => c + x.value, 0) /\n                question.answers.length) *\n                1000\n            ) / 1000;\n          break;\n        case 'total':\n          question.stat =\n            Math.round(\n              question.answers.reduce((c, x) => c + x.value, 0) * 1000\n            ) / 1000;\n          break;\n        case 'count':\n          question.instances = question.answers.filter(isAnswerValid);\n          question.stat = question.instances.length;\n          break;\n      }\n\n      if (isNaN(question.stat)) {\n        question.stat = undefined;\n      }\n    });\n\n    return [questions.filter(x => x.stat !== undefined), answers.length];\n  };\n\n  getPopularWords = async () => {\n    // Word count\n    const theWords = {};\n    const entries = await this.props.db.getAll('entries');\n    const noteEntries = await this.props.db\n      .getAll('trackingEntries')\n      .then(results => {\n        return results.map(x => x.notes || '');\n      });\n\n    const wordCount = [...entries, ...noteEntries].reduce((c, entry) => {\n      const words = entry\n        .split(/[.\\s,]+/)\n        .map(x => x.toLowerCase())\n        .filter(Boolean);\n\n      words\n        .filter(x => this.state.showStopWords || !stopWords.includes(x))\n        .forEach(w => (theWords[w] = theWords[w] ? theWords[w] + 1 : 1));\n\n      return c + words.length;\n    }, 0);\n\n    const highestValues = Array.from(\n      new Set(Object.values(theWords).sort((a, b) => b - a))\n    );\n    const popularWords = highestValues.slice(0, 50).map(v => [\n      v,\n      Object.keys(theWords)\n        .filter(k => theWords[k] === v)\n        .join(', '),\n    ]);\n\n    return [wordCount, popularWords];\n  };\n\n  removeDuplicates(c, date) {\n    return c.indexOf(date) === -1 ? [...c, date] : c;\n  }\n\n  render(\n    {},\n    {\n      totalEntries,\n      uniqueDates,\n      wordCount,\n      totalHighlights,\n      totalTrackingEntries,\n      popularWords,\n      showPopularWords,\n      showStopWords,\n      trackingQuestions,\n      statOffset,\n    }\n  ) {\n    const thisWeek = getOffsetToMonday();\n    const thisMonth = new Date().getDate() - 1;\n    const thisYear = getOffsetToYear();\n\n    const stats = (\n      <div>\n        {wordCount ? (\n          <p>\n            You've written <strong>{wordCount}</strong>{' '}\n            {pluralise('word', wordCount)} in{' '}\n            <strong>\n              {totalEntries} {pluralise('entry', totalEntries, 'entries')}\n            </strong>{' '}\n            over{' '}\n            <strong>\n              {uniqueDates} {pluralise('day', uniqueDates)}\n            </strong>\n            !\n          </p>\n        ) : null}\n        {totalHighlights ? (\n          <p>\n            You've also highlighted <strong>{totalHighlights}</strong>{' '}\n            {pluralise('day', totalHighlights)}. Check{' '}\n            {pluralise('it', totalHighlights, 'them')} out{' '}\n            <Link href=\"/highlights/\">here</Link>.\n          </p>\n        ) : null}\n\n        {showPopularWords && popularWords.length ? (\n          <div>\n            <p>Your most popular words are:</p>\n            <table class=\"left\">\n              <tbody>\n                {popularWords.map(([v, k]) => (\n                  <tr key={k}>\n                    <th>{v}</th>\n                    <td class=\"capitalize\">{k}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            <br />\n            {!showStopWords ? (\n              <button\n                type=\"button\"\n                class=\"button button--grey\"\n                onClick={() => {\n                  this.setState({ showStopWords: true });\n                  this.getData();\n                }}\n              >\n                Include stop words\n              </button>\n            ) : null}\n          </div>\n        ) : wordCount ? (\n          <button\n            type=\"button\"\n            class=\"button button--grey\"\n            onClick={() => this.setState({ showPopularWords: true })}\n          >\n            Show popular words\n          </button>\n        ) : null}\n\n        {totalTrackingEntries ? (\n          <div class=\"mb40\">\n            <hr />\n            <header class=\"c-statistic-controls u-flex mb20\">\n              <h2>Personal Statistics</h2>\n              <select\n                class=\"c-select--small\"\n                value={statOffset}\n                onChange={event => {\n                  this.setState({ statOffset: Number(event.target.value) });\n                  this.getData();\n                }}\n              >\n                <option value=\"0\">All time</option>\n                <option value=\"7\">7 days</option>\n                <option value=\"14\">14 days</option>\n                <option value=\"30\">30 days</option>\n                <option value=\"365\">365 days</option>\n                <option value={thisWeek}>This week</option>\n                <option value={thisMonth}>This month</option>\n                <option value={thisYear}>This year</option>\n              </select>\n            </header>\n\n            <p>\n              You've tracked {totalTrackingEntries} personal{' '}\n              {pluralise('statistic', totalTrackingEntries)} on MindPalace.\n            </p>\n\n            {trackingQuestions.map(question => (\n              <div class=\"tracking-summary\">\n                <strong>{question.title}</strong>\n                <span class=\"tracking-summary__stat\">\n                  <output>{question.stat}</output>\n                  <small> ({question.settings.calculation})</small>\n                </span>\n                {question.instances && question.instances.length ? (\n                  <Link href={`/entries/${question.id}`}>See all entries</Link>\n                ) : null}\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div>\n          </div>\n        )}\n      </div>\n    );\n\n    const empty = (\n      <p>\n        There's not quite enough data to gather stats. {' '}<br/><br/>\n        <Link href={today}>start writing</Link>!\n      </p>\n    );\n\n    const isEmpty =\n      Math.min(totalEntries, uniqueDates, wordCount) === 0 &&\n      !totalTrackingEntries;\n\n    return (\n      <div class=\"wrap wrap--thin lift-children\">\n        <h1 class=\"mb20\">Statistics & Reports</h1><hr/>\n        <div>{isEmpty ? empty : stats}</div>\n      </div>\n    );\n  }\n}\n\nexport default connect('db')(Stats);\n\n\n\n// WEBPACK FOOTER //\n// ./routes/stats/index.js"],"sourceRoot":""}